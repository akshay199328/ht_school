// Split and get db string
DELIMITER $$

CREATE FUNCTION SPLIT_STR(
  X VARCHAR(255),
  delim VARCHAR(12),
  pos INT
)
RETURNS VARCHAR(255) DETERMINISTIC
BEGIN 
    RETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(X, delim, pos),
       LENGTH(SUBSTRING_INDEX(X, delim, pos -1)) + 1),
       delim, '');
END$$

DELIMITER ;
---------------------------------------------------------
SELECT posts.post_title AS course,rel.meta_key AS USER,rel.meta_value AS score,posts.ID AS course_id FROM ht_posts AS posts 
LEFT JOIN ht_postmeta AS rel ON posts.ID = rel.post_id WHERE 
posts.post_type = 'course' AND posts.post_status = 'publish' AND rel.meta_key= 'vibe_course_age_group' 
AND SPLIT_STR(rel.meta_value, '-', 2) != "" AND (SPLIT_STR(rel.meta_value, '-', 1) <= 18
	AND SPLIT_STR(rel.meta_value, '-', 2) >= 12
)
#and (rel.meta_value LIKE '%10%' OR rel.meta_value LIKE '%13%')
---------------------------------------------------------
CREATE VIEW `get_order_details` AS SELECT
    p.ID AS order_id,
    p.post_date,
    MAX( CASE WHEN pm.meta_key = '_billing_email' AND p.ID = pm.post_id THEN pm.meta_value END ) AS billing_email,
    MAX( CASE WHEN pm.meta_key = '_billing_first_name' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_first_name,
    MAX( CASE WHEN pm.meta_key = '_billing_last_name' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_last_name,
    MAX( CASE WHEN pm.meta_key = '_billing_address_1' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_address_1,
    MAX( CASE WHEN pm.meta_key = '_billing_address_2' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_address_2,
    MAX( CASE WHEN pm.meta_key = '_billing_city' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_city,
    MAX( CASE WHEN pm.meta_key = '_billing_state' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_state,
    MAX( CASE WHEN pm.meta_key = '_billing_postcode' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _billing_postcode,
    MAX( CASE WHEN pm.meta_key = '_shipping_first_name' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_first_name,
    MAX( CASE WHEN pm.meta_key = '_shipping_last_name' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_last_name,
    MAX( CASE WHEN pm.meta_key = '_shipping_address_1' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_address_1,
    MAX( CASE WHEN pm.meta_key = '_shipping_address_2' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_address_2,
    MAX( CASE WHEN pm.meta_key = '_shipping_city' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_city,
    MAX( CASE WHEN pm.meta_key = '_shipping_state' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_state,
    MAX( CASE WHEN pm.meta_key = '_shipping_postcode' AND p.ID = pm.post_id THEN pm.meta_value END ) AS _shipping_postcode,
    MAX( CASE WHEN pm.meta_key = '_order_total' AND p.ID = pm.post_id THEN pm.meta_value END ) AS order_total,
    MAX( CASE WHEN pm.meta_key = '_order_tax' AND p.ID = pm.post_id THEN pm.meta_value END ) AS order_tax,
    MAX( CASE WHEN pm.meta_key = '_paid_date' AND p.ID = pm.post_id THEN pm.meta_value END ) AS paid_date,
    MAX( CASE WHEN pm.meta_key = '_payment_method' AND p.ID = pm.post_id THEN pm.meta_value END ) AS payment_method,
    ( SELECT GROUP_CONCAT( order_item_name SEPARATOR '|' ) FROM ht_woocommerce_order_items WHERE order_id = p.ID ) AS order_items
FROM
    ht_posts p 
    JOIN ht_postmeta pm ON p.ID = pm.post_id
    JOIN ht_woocommerce_order_items oi ON p.ID = oi.order_id
WHERE
    post_type = 'shop_order' AND
    post_date BETWEEN '2021-01-01' AND '2021-12-31' AND
    post_status = 'wc-completed' AND
    p.ID = order_id() ;
GROUP BY
    p.ID

create function order_id() returns INTEGER DETERMINISTIC NO SQL return @order_id;

create view h_parm as
select * from sw_hardware_big where unit_id = order_id() ;

select s.* from (select @order_id:=12 p) parm , h_parm s;
---------------------------------------------------------
/* Create table in target */
CREATE TABLE `ht_archive_email_logs`(
    `id` int(11) NOT NULL  auto_increment ,
    `queue_id` int(11) NULL  ,
    `email_id` varchar(100) COLLATE utf8mb4_general_ci NULL  ,
    `user_id` int(11) NULL  ,
    `email_subject` varchar(255) COLLATE utf8mb4_general_ci NULL  ,
    `email_body` text COLLATE utf8mb4_general_ci NULL  ,
    `email_headers` varchar(255) COLLATE utf8mb4_general_ci NULL  ,
    `attachments` varchar(100) COLLATE utf8mb4_general_ci NULL  ,
    `sent_on` datetime NULL  ,
    `queue_created_on` datetime NULL  ,
    `archived_on` datetime NULL  ,
    PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET='utf8mb4' COLLATE='utf8mb4_general_ci';


/* Create table in target */
CREATE TABLE `ht_email_queue`(
    `id` int(11) NOT NULL  auto_increment ,
    `email_id` varchar(100) COLLATE utf8mb4_general_ci NULL  ,
    `user_id` int(11) NULL  ,
    `email_subject` varchar(255) COLLATE utf8mb4_general_ci NULL  ,
    `email_body` text COLLATE utf8mb4_general_ci NULL  ,
    `email_headers` varchar(255) COLLATE utf8mb4_general_ci NULL  ,
    `attachments` varchar(100) COLLATE utf8mb4_general_ci NULL  ,
    `is_sent` int(1) NULL  DEFAULT 0 COMMENT '0: Not processed, 1: Processed, 2: Not send' ,
    `sent_on` datetime NULL  ,
    `created_on` datetime NULL  ,
    PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET='utf8mb4' COLLATE='utf8mb4_general_ci';

CREATE TABLE `ht_ga_tag_logs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `event` varchar(50) DEFAULT NULL,
  `log` text DEFAULT NULL,
  `created_on` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4

CREATE TABLE `ht_admin_student_logins` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `token` varchar(100) DEFAULT NULL,
  `admin_id` int(11) DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `log_on` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4